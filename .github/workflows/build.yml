name: "build"

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install LLVM and Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16
          sudo apt-get install -y clang-16 lld-16 libc++-16-dev libc++abi-16-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 100

      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Set up Python for Conan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          pip install conan
          conan --version

      - name: Configure Conan
        run: |
          conan profile detect --force

      - name: Install dependencies with Conan
        run: |
          mkdir -p build
          cd build
          conan install .. --output-folder=. --build=missing -s compiler=clang -s compiler.version=16 -s compiler.libcxx=libstdc++11

      - name: Configure CMake
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build
        run: |
          cd build
          cmake --build . --config Release --parallel $(nproc)

      - name: Package
        run: |
          cd build
          cpack -G TGZ -C Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: build/*.tar.gz

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install LLVM and Clang
        run: |
          choco install llvm --version=16.0.0 -y

      - name: Set up environment variables
        shell: bash
        run: |
          echo "C:/Program Files/LLVM/bin" >> $GITHUB_PATH

      - name: Set up Python for Conan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: |
          pip install conan
          conan --version

      - name: Configure Conan
        shell: bash
        run: |
          conan profile detect --force

      - name: Install dependencies with Conan
        shell: bash
        run: |
          mkdir -p build
          cd build
          conan install .. --output-folder=. --build=missing -s compiler=clang -s compiler.version=16

      - name: Configure CMake
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -G "Ninja"

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      - name: Package
        run: |
          cd build
          cpack -G ZIP -C Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: build/*.zip